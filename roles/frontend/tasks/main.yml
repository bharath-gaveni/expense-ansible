- name: installing nginx webserver
  ansible.builtin.yum:
    name: nginx
    state: present

- name: coping expense.conf file to some location or destination(this is called reverse proxy i.e connecting to frontend to backend like frontend sending requests to backend)
  ansible.builtin.template:
    src: expense.conf
    dest: /etc/nginx/default.d/expense.conf

- name: import common role - app-prereq
  ansible.builtin.import_role:
    name: common
    tasks_from: app-prereq
  vars:
    app_dir: /usr/share/nginx/html
    component: frontend

- name: restarting nginx webserver
  ansible.builtin.service:
    name: nginx
    state: restarted
    enabled: yes

- name: import elk role - filebeat
  ansible.builtin.import_role:
     name: elk
     tasks_from: filebeat

- name: import prometheus - node-exporter
  ansible.builtin.import_role:
    name: prometheus
    tasks_from: node-exporter

- name: import grafana - Dashboard creation
  ansible.builtin.import_role:
    name: grafana

- name: import prometheus role - Alert Rules Update
  ansible.builtin.import_role:
    name: prometheus
    tasks_from: alert-rules-update

- name: install New Relic Agent
  ansible.builtin.shell: curl -Ls https://download.newrelic.com/install/newrelic-cli/scripts/install.sh | bash && sudo NEW_RELIC_API_KEY=NRAK-C6LJUPON4143YTY479RYLV56Z1G NEW_RELIC_ACCOUNT_ID=4264991 /usr/local/bin/newrelic install -n infrastructure-agent-installer -y --tag {{ component}}-{{ env }}

- name: install New Relic Nginx Agent
  ansible.builtin.dnf:
    name: nri-nginx
    state: installed

- name: Copy new relic nginx agent config file
  ansible.builtin.template:
    src: nri-nginx.yml
    dest: /etc/newrelic-infra/integrations.d/nginx-config.yml

- name: Copy new relic nginx agent Log shipper config file
  ansible.builtin.template:
    src: nri-nginx-log.yml
    dest: /etc/newrelic-infra/logging.d/nginx-log.yml
