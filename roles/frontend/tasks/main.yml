- name: installing nginx webserver
  ansible.builtin.yum:
    name: nginx
    state: present

- name: coping expense.conf file to some location or destination(this is called reverse proxy i.e connecting to frontend to backend like frontend sending requests to backend)
  ansible.builtin.template:
    src: expense.conf
    dest: /etc/nginx/default.d/expense.conf

- name: import common role - app-prereq
  ansible.builtin.import_role:
    name: common
    tasks_from: app-prereq
  vars:
    app_dir: /usr/share/nginx/html
    component: frontend

- name: restarting nginx webserver
  ansible.builtin.service:
    name: nginx
    state: restarted
    enabled: yes

- name: import elk role - filebeat
  ansible.builtin.import_role:
     name: elk
     tasks_from: filebeat

- name: import prometheus - node-exporter
  ansible.builtin.import_role:
    name: prometheus
    tasks_from: node-exporter

- name: import grafana - Dashboard creation
  ansible.builtin.import_role:
    name: grafana

- name: Add frontend Alert YAML file
  ansible.builtin.template:
    src: alert-rules.yml
    dest: /tmp/{{ component }}-{{ env }}.yml

- name: upload frontend Alert File to s3 Bucket
  ansible.builtin.shell: aws s3 cp /tmp/{{ component }}-{{ env }}.yml s3://prometheus-frontend-alert-file/{{ component }}-{{ env }}.yml
  #amazon.aws.s3_object:
    #bucket: prometheus-frontend-alert-file
    #object: "{{ component }}-{{ env }}.yml"
    #src: /tmp/{{ component }}-{{ env }}.yml
   # mode: put

- name: Jenkins trigger prometheus reload job ( means it runs main file in prometheus role in jenkins trigger )
  ansible.builtin.shell: curl -u {{ lookup('amazon.aws.aws_ssm', 'jenkins.username', region='us-east-1' ) }}:{{ lookup('amazon.aws.aws_ssm', 'jenkins.password', region='us-east-1' ) }} "http://172.31.47.11:8080/job/prometheus-reload/build?token=prometheus"

